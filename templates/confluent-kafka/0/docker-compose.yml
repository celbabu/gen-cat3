kafka-topics-ui:
  image: landoop/kafka-topics-ui:0.9.4
  environment:
    KAFKA_REST_PROXY_URL: http://rest-proxy:8082
    PROXY: 'true'
  tty: true
  ports:
  - 8000:8000/tcp
  labels:
    io.rancher.scheduler.affinity:container_label_soft_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}
    io.rancher.container.hostname_override: container_name

ksql-cli:
  image: confluentinc/cp-ksql-cli:5.1.2
  entrypoint:
  - /bin/sh
  tty: true

zookeeper:
  image: confluentinc/cp-zookeeper:5.1.2
  environment:
    ZOOKEEPER_CLIENT_PORT: '2181'
    ZOOKEEPER_TICK_TIME: '2000'
  ports:
  - 2181:2181/tcp

schema-registry-ui:
  image: landoop/schema-registry-ui:0.9.5
  hostname: kafka-schema-registry-ui
  environment:
    PROXY: 'true'
    SCHEMAREGISTRY_URL: http://schema-registry:8081/
  tty: true
  ports:
  - 8001:8000/tcp
  labels:
    io.rancher.scheduler.affinity:container_label_soft_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}
    io.rancher.container.hostname_override: container_name

kafka:
  image: confluentinc/cp-kafka:5.1.2
  hostname: kafka
  environment:
    KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://${advertized_host_name}:9092
    KAFKA_BROKER_ID: '1'
    KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
    KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
    KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: '1'
    KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  volumes:
  - /opt/kafka_ssl:/etc/kafka/secrets
  ports:
  - 9092:9092/tcp
  - 9093:9093/tcp

schema-registry:
  image: confluentinc/cp-schema-registry:5.1.2
  hostname: schema-registry
  environment:
    SCHEMA_REGISTRY_HOST_NAME: schema-registry
    SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: zookeeper:2181
  ports:
  - 8081:8081/tcp

rest-proxy:
  image: confluentinc/cp-kafka-rest:5.1.2
  hostname: rest-proxy
  environment:
    KAFKA_REST_BOOTSTRAP_SERVERS: kafka:29092
    KAFKA_REST_HOST_NAME: rest-proxy
    KAFKA_REST_LISTENERS: http://0.0.0.0:8082
    KAFKA_REST_SCHEMA_REGISTRY_URL: http://schema-registry:8081
  ports:
  - 8082:8082/tcp

connect:
  image: confluentinc/cp-kafka-connect:5.1.2
  hostname: connect
  environment:
    CLASSPATH: /usr/share/java/monitoring-interceptors/monitoring-interceptors-5.1.2.jar
    CONNECT_BOOTSTRAP_SERVERS: kafka:29092
    CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: '1'
    CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
    CONNECT_CONSUMER_INTERCEPTOR_CLASSES: io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor
    CONNECT_GROUP_ID: compose-connect-group
    CONNECT_INTERNAL_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
    CONNECT_INTERNAL_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
    CONNECT_KEY_CONVERTER: io.confluent.connect.avro.AvroConverter
    CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
    CONNECT_LOG4J_LOGGERS: org.apache.zookeeper=ERROR,org.I0Itec.zkclient=ERROR,org.reflections=ERROR
    CONNECT_OFFSET_FLUSH_INTERVAL_MS: '10000'
    CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: '1'
    CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
    CONNECT_PLUGIN_PATH: /usr/share/java
    CONNECT_PRODUCER_INTERCEPTOR_CLASSES: io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor
    CONNECT_REST_ADVERTISED_HOST_NAME: connect
    CONNECT_REST_PORT: '8083'
    CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: '1'
    CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
    CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
    CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
    CONNECT_ZOOKEEPER_CONNECT: zookeeper:2181
  volumes:
  - mi2:/usr/share/java/monitoring-interceptors/
  ports:
  - 8083:8083/tcp

ksql-server:
  image: confluentinc/cp-ksql-server:5.1.2
  hostname: ksql-server
  environment:
    KSQL_APPLICATION_ID: cp-all-in-one
    KSQL_BOOTSTRAP_SERVERS: kafka:29092
    KSQL_CACHE_MAX_BYTES_BUFFERING: '0'
    KSQL_CONFIG_DIR: /etc/ksql
    KSQL_CONSUMER_INTERCEPTOR_CLASSES: io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor
    KSQL_HOST_NAME: ksql-server
    KSQL_KSQL_SCHEMA_REGISTRY_URL: http://schema-registry:8081
    KSQL_LISTENERS: http://0.0.0.0:8088
    KSQL_LOG4J_OPTS: -Dlog4j.configuration=file:/etc/ksql/log4j-rolling.properties
    KSQL_PRODUCER_INTERCEPTOR_CLASSES: io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor
  ports:
  - 8088:8088/tcp
