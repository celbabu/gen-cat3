version: '2'
services:
  source-ingest-lrit:
    image: 131.137.160.79:9191/gciplus-microservices/gen3/ingest-lrit:2.0.3
    restart: on-failure
    environment:
      APPLICATION_ID: ${application_id}
      LOGGING_LEVEL: ${logging_level}
      KAFKA_HOST: ${kafka_host}
      KAFKA_PORT: ${kafka_port} 
      KAFKA_OUTPUT_TOPIC: ${kafka_output_topic}
      KAFKA_LRIT_MARITIME_CONTACT_HOME_OUTPUT: ${kafka_lrit_maritime_contact_home_output}
      KAFKA_LRIT_MARITIME_CONTACT_FOREIGN_OUTPUT: ${kafka_lrit_maritime_contact_foreign_output}
      KAFKA_COMPRESSION: snappy
      KAFKA_SERIALIZER_SETTINGS: "schema.registry.url=${schema_registry_url}"
      KAFKA_SERIALIZER_CLASS: ca.forces.marlant.bis.gciplus.common.core.camel.kafka.EnvConfKafkaAvroSerializer
      JMX_AGENT_PORT: 11083
      SEDA_CONCURRENT_CONSUMERS: 4
      LRIT_ENDPOINT: ${lrit_endpoint}
      LRIT_ENDPOINT_ADDRESS: ${lrit_endpoint_address}
      LRIT_WSDL_ADDRESS: ${lrit_wsdl_address}
      LRIT_USERNAME: ${lrit_username}
      LRIT_PASSWORD: ${lrit_password}
      LRIT_CRON_SCHED: ${cron_schedule}
      JAVA_OPTS: "-Xms64m -Xmx640m -javaagent:lib/jmx_prometheus_javaagent-0.10.jar=9001:config.yml -Dlog4j.configurationFile=log4j2.properties"
      ENABLE_SOAP_LOGGING: ${enable_soap_logging}
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_MAX_CONNECTIONS: 10
      REDIS_MAX_IDLE_CONNECTIONS: 5
      REDIS_EXPIRE_TIME: 600
      LRIT_MAX_TIME_QUERY: 21600000
      OVERLAP_REQUEST_TIME_IN_MILLIS: 320000
      MONITORING_HEALTHCHECK_PORT: 9000
      MONITORING_HEALTHCHECK_PATH: healthcheck
      MONITORING_HEALTHCHECK_REFRESH_MS: 30000
      MONITORING_PROMETHEUS_PORT: 9001
    external_links:
      - ${kafka_service}:kafka
      - ${schema_registry_service}:schema-registry
    links:
      - lrit-redis:redis
    labels:
      prometheus.port: 9001
  
  lrit-redis:
    image: redis:5.0.0
    stdin_open: true
    tty: true
    labels:
      io.rancher.container.pull_image: always
