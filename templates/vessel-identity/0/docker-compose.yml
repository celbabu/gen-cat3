# starts up 3 docker containers to configure a machine to host identity service
# Workflow:
#    - starts up Elascticsearch
#    - starts up custom Logstash that loads vessel data into Elasticsearch
#    - finally starts Identity Service that
#

version: '2'
services:

  elastic-search:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.4.2
    restart: on-failure
    ports:
    - 9200:9200
    - 9300:9300
    environment:
      - cluster.name=identity-cluster
      - bootstrap.memory_lock=true
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata:/usr/share/elasticsearch/data

  identity-data: # custom Logstash pipeline
    image: 131.137.160.79:9191/gciplus-microservices/gen3/vessel-identity-data:1.0.0
    depends_on:
      - elastic-search
    environment:
      - XPACK.MONITORING.ELASTICSEARCH_URL=http://elastic-search:9200
      - ELASTIC_HOST=http://elastic-search:9200
      - VESSEL_INDEX=${elastic_index_name}
      - DATA_FILE=${data_file}
      - LOG_LEVEL=${logging_level}
    labels:
      io.rancher.container.pull_image: always
 

  vessel-identity-service:
    image: 131.137.160.79:9191/gciplus-microservices/gen3/vessel-identity-service:1.0.0
    restart: on-failure    
    ports:
      - ${identity_port}:${identity_port}
    depends_on:
      - elasticsearch
    environment:
      APPLICATION_ID: ${application_id}
      LOGGING_LEVEL: ${logging_level}
      SEDA_CONCURRENT_CONSUMERS: ${seda_concurrent_consumers}
      ELASTIC_HOST: elastic-search 
      ELASTIC_PORT: 9200      
      IDENTITY_HOST: ${identity_host}
      IDENTITY_PORT: ${identity_port}
      ELASTIC_CLUSTER_NAME: identity-cluster
      ELASTIC_INDEX_NAME: ${elastic_index_name}                
      ELASTIC_INDEX_TYPE: _doc
      JMX_AGENT_PORT: 11083
      MONITORING_HEALTHCHECK_PORT: 9000
      MONITORING_HEALTHCHECK_PATH: healthcheck
      MONITORING_HEALTHCHECK_REFRESH_MS: 30000
      MONITORING_PROMETHEUS_PORT: 9001
      JAVA_OPTS: "-Xms64m -Xmx640m -javaagent:lib/jmx_prometheus_javaagent-0.10.jar=9001:config.yml -Dlog4j.configurationFile=log4j2.properties"
    labels:
      prometheus.port: 9001
      io.rancher.container.pull_image: always

volumes:
  esdata:
    driver: local
