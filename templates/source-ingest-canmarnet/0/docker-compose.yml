version: '2'
services:
  source-ingest-canmarnet:
    image: 131.137.160.79:9191/gciplus-microservices/gen3/ingest-canmarnet:1.0.0
    restart: on-failure
    environment:
      APPLICATION_ID: ${canmarnet_application_id}
      LOGGING_LEVEL: ${logging_level}
      IMAP_DEBUG_MODE: ${imap_debug_mode}
      KAFKA_HOST: ${kafka_host}
      KAFKA_PORT: ${kafka_port}
      KAFKA_OSWEX_OUTPUT_TOPIC: ${canmarnet_oswex_output_topic}
      KAFKA_TCA_OUTPUT_TOPIC: ${canmarnet_tca_output_topic}
      KAFKA_AA1_OUTPUT_TOPIC: ${canmarnet_aa1_output_topic}
      KAFKA_COMPRESSION: snappy
      KAFKA_SERIALIZER_SETTINGS: schema.registry.url=${schema_registry_url}
      KAFKA_SERIALIZER_CLASS: ca.forces.marlant.bis.gciplus.common.core.camel.kafka.EnvConfKafkaAvroSerializer
      JMX_AGENT_PORT: 11083
      SEDA_CONCURRENT_CONSUMERS: 4
      JAVA_OPTS: "-Xms64m -Xmx640m -javaagent:lib/jmx_prometheus_javaagent-0.10.jar=9001:config.yml -Dlog4j.configurationFile=log4j2.properties"
      USE_IMAPS_COMPONENT: ${use_imaps_component}
      DELETE_MESSAGES_AFTER_READ: ${delete_message_after_read}
      IMAPS_PORT: ${imap_port}
      IMAPS_HOSTNAME: ${imap_hostname}
      EMAIL_ADDRESS: ${canmarnet_email_address}
      EMAIL_PASSWORD: ${canmarnet_email_password}
      MONITORING_HEALTHCHECK_PORT: 9000
      MONITORING_HEALTHCHECK_PATH: healthcheck
      MONITORING_HEALTHCHECK_REFRESH_MS: 30000
      MONITORING_PROMETHEUS_PORT: 9001
      CLAMAV_HOSTNAME: clamav
      CLAMAV_PORT: 3310
      CLAMAV_TIMEOUT: 500
    external_links:
      - ${kafka_service}:kafka
      - ${schema_registry_service}:schema-registry
    links:
      - clamav
    labels:
      prometheus.port: 9001

  decode-tca:
    image: 131.137.160.79:9191/gciplus-microservices/gen3/decode-tca:1.0.1
    restart: on-failure
    environment:
      APPLICATION_ID: ${tca_application_id}
      BOOTSTRAP_SERVERS_CONFIG: ${kafka_host}:${kafka_port}
      SCHEMA_REGISTRY_URL: ${schema_registry_url}
      LOGGING_LEVEL: ${logging_level}
      AUTO_OFFSET_RESET: earliest
      KAFKA_INPUT_TOPIC: ${tca_input_topic}
      KAFKA_OUTPUT_TOPIC_CONTACTS: ${tca_output_topic}
      KAFKA_COMMON_OUTPUT_TOPIC_CONTACTS: ${tca_common_output_topic}
      KAFKA_COMPRESSION: snappy
      NUM_STREAM_THREADS: 1
      JMX_AGENT_PORT: 11083
      MONITORING_HEALTHCHECK_PORT: 9000
      MONITORING_HEALTHCHECK_PATH: healthcheck
      MONITORING_HEALTHCHECK_REFRESH_MS: 30000
      MONITORING_PROMETHEUS_PORT: 9001
      JAVA_OPTS: "-Xms64m -Xmx640m -Dlog4j.configurationFile=log4j2.properties"
    external_links:
      - ${kafka_service}:kafka
      - ${schema_registry_service}:schema-registry
    labels:
      prometheus.port: 9001

  decode-oswex:
    image: 131.137.160.79:9191/gciplus-microservices/gen3/decode-otg:3.0.1
    restart: on-failure
    environment:
      APPLICATION_ID: ${oswex_application_id}
      BOOTSTRAP_SERVERS_CONFIG: ${kafka_host}:${kafka_port}
      SCHEMA_REGISTRY_URL: ${schema_registry_url}
      LOGGING_LEVEL: ${logging_level}
      AUTO_OFFSET_RESET: earliest
      KAFKA_INPUT_TOPICS: ${oswex_canmarnet_input_topic}
      KAFKA_OUTPUT_TOPIC: ${oswex_maritime_contact_output_topic}
      KAFKA_OUTPUT_FORMAT_SPECIFIC_TOPIC_CONTACTS: ${oswex_format_specific_output_topic}
      KAFKA_OUTPUT_TOPIC_UNPARSABLE: ${oswex_unparsable_output_topic}
      KAFKA_COMPRESSION: snappy
      PARSE_RUNNER_RECOVERY_MAX_ATTEMPTS: 25
      NUM_STREAM_THREADS: 1
      JMX_AGENT_PORT: 11083
      MONITORING_HEALTHCHECK_PORT: 9000
      MONITORING_HEALTHCHECK_PATH: healthcheck
      MONITORING_HEALTHCHECK_REFRESH_MS: 30000
      MONITORING_PROMETHEUS_PORT: 9001
      JAVA_OPTS: "-Xms64m -Xmx640m -Dlog4j.configurationFile=log4j2.properties"
    external_links:
      - ${kafka_service}:kafka
      - ${schema_registry_service}:schema-registry
    labels:
      prometheus.port: 9001

##### Disabled decode-aa1 for now as we are no longer receiving emails to process. #####
#  decode-aa1:
#    image: 131.137.160.79:9191/gciplus-microservices/gen3/decode-aa1:development
#    restart: on-failure
#    environment:
#      APPLICATION_ID: ${aa1_application_id}
#      BOOTSTRAP_SERVERS_CONFIG: ${kafka_host}:${kafka_port}
#      SCHEMA_REGISTRY_URL: ${schema_registry_url}
#      LOGGING_LEVEL: ${logging_level}
#      AUTO_OFFSET_RESET: earliest
#      KAFKA_INPUT_TOPIC: ${aa1_input_topic}
#      KAFKA_OUTPUT_TOPIC_CONTACTS: ${aa1_output_topic}
#      KAFKA_COMMON_OUTPUT_TOPIC_CONTACTS: ${aa1_common_output_topic}
#      KAFKA_COMPRESSION: snappy
#      NUM_STREAM_THREADS: 1
#      JMX_AGENT_PORT: 11083
#      MONITORING_HEALTHCHECK_PORT: 9000
#      MONITORING_HEALTHCHECK_PATH: healthcheck
#      MONITORING_HEALTHCHECK_REFRESH_MS: 30000
#      MONITORING_PROMETHEUS_PORT: 9001
#      JAVA_OPTS: "-Xms64m -Xmx640m -Dlog4j.configurationFile=log4j2.properties"
#    external_links:
#      - ${kafka_service}:kafka
#      - ${schema_registry_service}:schema-registry

  clamav:
    image: mk0x/docker-clamav:alpine
    stdin_open: true
    tty: true
    labels:
      io.rancher.container.pull_image: always
