
# vessel-identity-image: service that accepts imo as request and returns a list of image urls for that imo
#

version: '2'
services:
  vessel-identity-image: 
    #image: 131.137.160.79:9191/gciplus-microservices/gen3/vessel-identity-image:1.0.0
    image: localhost:5000/vessel-identity-image:dev
    restart: on-failure
    #network_mode: host
    ports:
     - ${identity_image_port}:${identity_image_port}
    environment: # Set ENV vars
      APPLICATION_ID: ${application_id}
      LOGGING_LEVEL: info
      JMX_AGENT_PORT: 11083
      MONITORING_HEALTHCHECK_PORT: 9000
      MONITORING_HEALTHCHECK_PATH: healthcheck
      MONITORING_HEALTHCHECK_REFRESH_MS: 30000
      MONITORING_HEALTHCHECK_ROUTE_ERROR_UNHEALTHY_STATE_TIMEOUT_MS: 30000
      MONITORING_HEALTHCHECK_INACTIVITY_CHECK_ENABLED: false
      MONITORING_HEALTHCHECK_INACTIVITY_TIMEOUT_MS: 2000
      MONITORING_PROMETHEUS_PORT: 9001
      IDENTITY_IMAGE_HOST: ${identity_image_host}
      IDENTITY_IMAGE_PORT: ${identity_image_port}
      IMAGE_DATABASE_HOST: ${image_db_host}
      IMAGE_DATABASE_NAME: ${image_db_name}
      IMAGE_DATABASE_PORT: ${image_db_port}
      IMAGE_DATABASE_USER: ${image_db_user}
      IMAGE_DATABASE_PASS: ${image_db_pass}
      IMAGE_SERVICE_BASE_URL: ${image_base_url}
      JAVA_OPTS: "-Xms64m -Xmx640m -javaagent:lib/jmx_prometheus_javaagent-0.12.0.jar=9001:config.yml -Dlog4j.configurationFile=log4j2.properties"
    external_links:
      - postgres:vessel-postgres
    labels:
      prometheus.port: 9001
      io.rancher.container.pull_image: always  
