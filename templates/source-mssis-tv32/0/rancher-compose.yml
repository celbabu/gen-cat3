version: '2'
services:
  ingest-mssis:
    scale: 1
    health_check:
      response_timeout: 2000
      healthy_threshold: 2
      port: 9000
      unhealthy_threshold: 3
      initializing_timeout: 120000
      interval: 30000
      strategy: recreate
      request_line: GET "/healthcheck" "HTTP/1.0"
      reinitializing_timeout: 120000
  distribute-mssis:
    scale: 1
    health_check:
      response_timeout: 2000
      healthy_threshold: 2
      port: 9000
      unhealthy_threshold: 3
      initializing_timeout: 120000
      interval: 30000
      strategy: recreate
      request_line: GET "/healthcheck" "HTTP/1.0"
      reinitializing_timeout: 120000
  docker-stunnel:
    scale: 1

catalog:
  name: "ingest-mssis-tv32"
  version: "development"
  description: "The ingest-mssis microservice accesses the volpe distributor service and downloads mssis ais data from the server."
  minimum_rancher_version: v0.51.0
  upgrade_from: none
  questions:
    - variable: ingest_application_id
      label: "Ingest Mssis Application Id"
      required: true
      type: "string"
      description: "An alphanumeric string that uniquely identifies this application instance. WARNING: Applications deployed with the same Application ID that consume data from the same Kafka topic will have data split between them. See the Kafka documentation for APPLICATION_ID for further explanation."
    - variable: distribute_application_id
      label: "Distribute Mssis Application Id"
      required: true
      type: "string"
      description: "An alphanumeric string that uniquely identifies this application instance. WARNING: Applications deployed with the same Application ID that consume data from the same Kafka topic will have data split between them. See the Kafka documentation for APPLICATION_ID for further explanation."
    - variable: kafka_service
      description: "Kafka Stack/Service."
      label: "Kafka Broker to Connect to."
      required: false
      type: "service"
    - variable: schema_registry_service
      description: "Confluent Schema Registry Service."
      label: "Schema Registry"
      required: false
      type: "service"
    - variable: kafka_host
      label: "Kafka Broker"
      required: true
      type: "string"
      default: "kafka"
    - variable: kafka_port
      label: "Kafka Broker Port"
      required: true
      type: "int"
      default: "9092"
    - variable: schema_registry_url
      label: "Schema Registry URL"
      required: true
      type: "string"
      default: "http://schema-registry:8081"
      description: "URL to a Confluent Schema Registry"
    - variable: ingest_kafka_output_topic
      label: "Name of topic where ais messages are stored on the kafka broker."
      required: true
      type: "string"
    - variable: costal_ais_input_host
      label: "Coastal AIS data host."
      required: true
      type: "string"
      default: "131.137.167.13"
      description: "Host to connect to to retrieve coastal data to upload using distribute-mssis."
    - variable: coastal_ais_input_port
      label: "Coastal AIS data port"
      required: true
      type: "int"
      default: "2121"
      description: "Port of host to connect to to retrieve coastal data to upload using distribute-mssis."
    - variable: logging_level
      label: "The Log4J Logging Level"
      required: true
      type: "enum"
      options:
        - ALL
        - DEBUG
        - INFO
        - WARN
        - ERROR
        - FATAL
        - OFF
        - TRACE
      default: "INFO"
      description: "See Log4J documentation for further explanation of these levels."
    - variable: mssis_username
      label: "MSSIS Username"
      required: true
      type: "string"
    - variable: mssis_password
      label: "MSSIS Password"
      required: true
      type: "password"
    - variable: distribute_kafka_input_topic
      label: "Kafka Input Topic for Distribute-Mssis (Coastal AIS plain text)"
      required: true
      type: "string"