version: '2'
services:
  ingest-mssis:
    image: 131.137.160.79:9191/gciplus-microservices/gen3/ingest-mssis:development
    depends_on:
      - docker-stunnel
    restart: on-failure
    environment:
      APPLICATION_ID: ${ingest_application_id}
      LOGGING_LEVEL: ${logging_level}
      KAFKA_HOST: ${kafka_host}
      KAFKA_PORT: ${kafka_port}
      KAFKA_OUTPUT_TOPIC: ${ingest_kafka_output_topic}
      KAFKA_COMPRESSION: snappy
      KAFKA_SERIALIZER_SETTINGS: "schema.registry.url=${schema_registry_url}"
      KAFKA_SERIALIZER_CLASS: ca.forces.marlant.bis.gciplus.common.core.camel.kafka.EnvConfKafkaAvroSerializer
      JMX_AGENT_PORT: 11083
      SEDA_CONCURRENT_CONSUMERS: 4
      SEDA_QUEUE_SIZE: 100000
      JAVA_OPTS: "-Xms64m -Xmx640m -javaagent:lib/jmx_prometheus_javaagent-0.10.jar=9001:config.yml -Dlog4j.configurationFile=log4j2.properties"
      MONITORING_HEALTHCHECK_PORT: 9000
      MONITORING_HEALTHCHECK_PATH: healthcheck
      MONITORING_HEALTHCHECK_REFRESH_MS: 30000
      MONITORING_PROMETHEUS_PORT: 9001
      MSSIS_HOST: mssis-stunnel
      MSSIS_DISTRIBUTOR_PORT: 1103
      MSSIS_USERNAME: ${mssis_username}
      MSSIS_PASSWORD: ${mssis_password}
    external_links:
      - ${kafka_service}:kafka
      - ${schema_registry_service}:schema-registry
    links:
      - docker-stunnel:mssis-stunnel
    labels:
      prometheus.port: 9001

  distribute-mssis:
    image: 131.137.160.79:9191/gciplus-microservices/gen3/distribute-mssis:development
    depends_on:
      - docker-stunnel
    restart: on-failure
    environment:
      APPLICATION_ID: ${distribute_application_id}
      LOGGING_LEVEL: info
      MSSIS_HOST: mssis-stunnel
      MSSIS_COLLECTOR_PORT: 1101
      MSSIS_USERNAME: ${mssis_username}
      MSSIS_PASSWORD: ${mssis_password}
      SEDA_CONCURRENT_CONSUMERS: 8
      SEDA_QUEUE_SIZE: 500000
      JAVA_OPTS: "-Xms64m -Xmx640m -javaagent:lib/jmx_prometheus_javaagent-0.10.jar=9001:config.yml -Dlog4j.configurationFile=log4j2.properties"
      MONITORING_HEALTHCHECK_PORT: 9000
      MONITORING_HEALTHCHECK_PATH: healthcheck
      MONITORING_HEALTHCHECK_REFRESH_MS: 30000
      MONITORING_PROMETHEUS_PORT: 9001
      KAFKA_HOST: ${kafka_host}
      KAFKA_PORT: ${kafka_port}
      KAFKA_INPUT_TOPIC: ${distribute_kafka_input_topic}
    external_links:
      - ${kafka_service}:kafka
      - ${schema_registry_service}:schema-registry
    links:
      - docker-stunnel:mssis-stunnel
    labels:
      prometheus.port: 9001

  docker-stunnel:
    image: 131.137.160.79:9191/gciplus-microservices/common/docker-stunnel:development
    hostname: mssis-stunnel-accept
    stdin_open: true
    tty: true
    labels:
      io.rancher.container.pull_image: always
