version: '2'
services:

  ingest-rabbitmq:
    image: 131.137.160.79:9191/gciplus-microservices/common/ingest-rabbitmq:1.0.0
    restart: on-failure
    environment:
      APPLICATION_ID: ${application_id}-ingestrabbitmq
      LOGGING_LEVEL: ${logging_level}
      RABBITMQ_HOST: ${rabbitmq_host}
      RABBITMQ_PORT: ${rabbitmq_port}
      RABBITMQ_INPUT_QUEUE: ${rabbitmq_input_queue}
      RABBITMQ_EXCHANGE: ${rabbitmq_exchange}
      RABBITMQ_AUTHENTICATION_ENABLED: ${rabbitmq_authentication_enabled}
      RABBITMQ_USERNAME: ${rabbitmq_username}
      RABBITMQ_PASSWORD: ${rabbitmq_password}
      RABBITMQ_SSL_PROTOCOL: ${rabbitmq_ssl_protocol}
      KAFKA_HOST: ${kafka_host}
      KAFKA_PORT: ${kafka_port} 
      KAFKA_OUTPUT_TOPIC: ${kafka_output_topic_rawais}
      KAFKA_COMPRESSION: snappy
      JMX_AGENT_PORT: 11083
      SEDA_SIZE: 50000
      SEDA_CONCURRENT_CONSUMERS: 4
      JAVA_OPTS: "-Xms64m -Xmx640m -Dlog4j.configurationFile=log4j2.properties -javaagent:lib/jmx_prometheus_javaagent-0.10.jar=9001:config.yml"
      MONITORING_HEALTHCHECK_PORT: 9000
      MONITORING_HEALTHCHECK_PATH: healthcheck
      MONITORING_HEALTHCHECK_REFRESH_MS: 30000
  
    external_links:
      - ${kafka_service}:kafka
    labels:
      prometheus.port: 9001

  decode-nmea:
    image: 131.137.160.79:9191/gciplus-microservices/gen3/decode-nmea:1.0.0
    restart: on-failure
    environment:
      APPLICATION_ID: ${application_id}-decodenmea
      RELEASABILITY: "ALL"
      PROVIDER: ${provider}
      ORIGINAL_MESSAGE_FORMAT: ais
      ORIGINAL_ENVELOPE_FORMAT: nmeav4
      CLASSIFICATION: "U N C L A S S I F I E D"
      LOGGING_LEVEL: ${logging_level}
      KAFKA_HOST: ${kafka_host}
      KAFKA_PORT: ${kafka_port}
      KAFKA_INPUT_TOPIC: ${kafka_output_topic_rawais}
      KAFKA_OUTPUT_TOPIC: ${kafka_output_topic_avrorawais}
      KAFKA_COMPRESSION: snappy
      KAFKA_SERIALIZER_SETTINGS: "schema.registry.url=${schema_registry_url}"
      JMX_AGENT_PORT: 11083
      SEDA_SIZE: 50000
      JAVA_OPTS: "-Xms64m -Xmx640m -Dlog4j.configurationFile=log4j2.properties -javaagent:lib/jmx_prometheus_javaagent-0.10.jar=9001:config.yml"
      MONITORING_HEALTHCHECK_PORT: 9000
      MONITORING_HEALTHCHECK_PATH: healthcheck
      MONITORING_HEALTHCHECK_REFRESH_MS: 30000
  
    external_links:
      - ${kafka_service}:kafka
      - ${schema_registry_service}:schema-registry
    labels:
      prometheus.port: 9001

  decode-ais:
    image: 131.137.160.79:9191/gciplus-microservices/gen3/decode-ais:3.0.3
    restart: on-failure
    environment:
      APPLICATION_ID: ${application_id}-decodeais
      LOGGING_LEVEL: ${logging_level}
      NUM_STREAM_THREADS: ${num_stream_threads}
      AUTO_OFFSET_RESET: ${auto_offset_reset}
      BOOTSTRAP_SERVERS_CONFIG: ${kafka_host}:${kafka_port}
      SCHEMA_REGISTRY_URL: ${schema_registry_url}
      KAFKA_INPUT_TOPICS: ${kafka_output_topic_avrorawais}
      KAFKA_OUTPUT_TOPIC: ${kafka_output_topic_avromaritimecontact}
      KAFKA_OUTPUT_TOPIC_AISCONTACTS: ${kafka_output_topic_avroaismaritimecontact}
      KAFKA_COMPRESSION: snappy
      JAVA_OPTS: "-Xms64m -Xmx640m -Dlog4j.configurationFile=log4j2.properties"
      PARSE_RUNNER_RECOVERY_MAX_ATTEMPTS: 25
      MONITORING_HEALTHCHECK_PORT: 9000
      MONITORING_HEALTHCHECK_PATH: healthcheck
      MONITORING_HEALTHCHECK_REFRESH_MS: 30000
      MONITORING_PROMETHEUS_PORT: 9001
  
    external_links:
      - ${kafka_service}:kafka
      - ${schema_registry_service}:schema-registry
    labels:
      prometheus.port: 9001
